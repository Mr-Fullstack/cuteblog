// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users{
  id Int @unique @id @default(autoincrement()) 
  name String
  email String @unique
  token String
  
  posts Posts[]
  likes Likes[]
  hearts Hearts[]
  comments Comments[]

  typeUser TypeUsers @relation(fields: [typeUserId],references: [id])
  typeUserId Int @unique @map("type_user_id") 

  @@map("users")
}

model Hearts {
  id Int @id @default(autoincrement())
  author Users @relation(fields: [authorId],references: [id])
  authorId Int @unique @map("author_id") 
  post Posts @relation(fields: [postId],references: [id])
  postId Int @unique @map("post_id") 

  @@map("hearts")
}

model Likes{
  id Int @id @default(autoincrement())
  author Users @relation(fields: [authorId],references: [id])
  authorId Int @unique @map("author_id") 
  post Posts @relation(fields: [postId],references: [id])
  postId Int @unique @map("post_id") 

  @@map("likes")
}

model Comments{
  id Int @id @default(autoincrement())
  author Users? @relation(fields: [authorId],references: [id])
  authorId Int? @unique @map("author_id") 
  post Posts? @relation(fields: [postId],references: [id])
  postId Int? @unique @map("post_id") 
  content String
  createdAt DateTime? @map("created_at") @default(now())

  @@map("comments")
}


model Posts {
  id Int @id @default(autoincrement())
  author Users @relation(fields: [authorId],references: [id])
  authorId Int @map("author_id") 
  title String
  content String
  published Boolean @default(false)
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt

  comments Comments[]
  likes Likes[]
  hearts Hearts[]
  categories CategoriesOnPosts[]

  @@map("posts")
}


model Categories {
  id Int @id @default(autoincrement())
  label String

  posts CategoriesOnPosts[]

  @@map("categories")
}

model TypeUsers {
  id Int @id @unique
  label String
  users Users[]

  @@map("type_users")
}

model CategoriesOnPosts {

  post Posts @relation(fields: [postId],references: [id])
  postId Int @unique @map("post_id")
  category Categories @relation(fields: [categoryId],references: [id])
  categoryId Int @unique @map("category_id")

  @@id([postId,categoryId])

  @@map("categories_on_posts")
}
